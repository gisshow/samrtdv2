/* global Cesium */
/* global viewer */
/* global mars3d */
/* global $ */
/* 0630 $ */

import React, { Component } from 'react';
import _ from 'lodash'
import { 
    Chart,
    Point,
    Legend,
    Annotation,
    Heatmap,
    Axis, 
    Tooltip, 
    Geom,
    LineAdvance,
    View,
    Label,
    Line,
    Coord,
    Area, 
    Interval,
    Coordinate,
    Interaction,
    registerShape, 
    G2, 
    Facet
} from 'bizcharts';
import { Table } from 'antd';
import styles from './styles.less';
import Pieslice from '@/components/Chart/Pieslice'
import DataSet from "@antv/data-set";
import { connect } from 'dva';

const scale = {
    LifeExpectancy:{
        alias:'人均寿命（年）',
        nice:true
    },
    Population:{
        alias:'人口总数'
    },
    GDP:{
        alias:'人均国内生产总值（$）',
        nice:true
    },
    Country:{
        alias:'国家/地区'
    }
};

const colorMap = {
    "2岁":'#1890FF',
    "5岁":'#2FC25B',
    "11岁":'#FACC14',
    "14岁":'#D05555'
}


//注册
function getTextAttrs(cfg){
    return _.assign(
        {},
        cfg.style,
        {
            fontSize:cfg.data.size,
            text:cfg.data.text,
            textAlign:'center',
            fontFamily:cfg.data.font,
            fill:cfg.color,
            textBaseline:'Alphabetic'
        }
    )
}

registerShape('point','cloud',{
    draw(cfg,container){
        const attrs = getTextAttrs(cfg);
        const textShape = container.addShape('text',{
            attrs:_.assign(attrs,{
                x:cfg.x,
                y:cfg.y
            })
        })
        if(cfg.data.rotate){
            G2.Util.rotate(textShape,cfg.data.rotate*Math.PI/100)
        }
        return textShape;
    }
})


@connect(({House}) => ({
    House
}))

class WindowChart extends Component {
    constructor(props) {
        super(props);
        this.state = {
            checkType:'textImg',
            height:'100%',
            padding:"20px",
            strData:'',
            lineImgData:[],
            curveData:[],
            columnarData:[
              {
                year: "1951 年",
                sales: 38
              },
              {
                year: "1952 年",
                sales: 52
              },
              {
                year: "1956 年",
                sales: 61
              },
              {
                year: "1957 年",
                sales: 145
              },
              {
                year: "1958 年",
                sales: 48
              },
              {
                year: "1959 年",
                sales: 38
              },
              {
                year: "1960 年",
                sales: 38
              },
              {
                year: "1962 年",
                sales: 38
              }
            ],
            areaData:[],
            breadData:{},
            coordinatesData:[],
            relationData:{
              "name": "flare",
              "children": [
                {
                  "name": "analytics",
                  "children": [
                    {
                      "name": "cluster",
                      "value": 743
                    }, {
                      "name": "graph",
                      "value": 3416
                    }, {
                      "name": "optimization",
                      "value": 7074
                    }
                  ]
                }, {
                  "name": "animate",
                  "children": [
                    {
                      "name": "Easing",
                      "value": 17010
                    }, {
                      "name": "FunctionSequence",
                      "value": 5842
                    }, {
                      "name": "interpolate",
                      "value": 8746
                    }
                  ]
                },{
                  "name": "vis",
                  "children": [
                    {
                      "name": "axis",
                      "value": 6703
                    },{
                      "name": "operator",
                      "value": 3202
                    }, {
                      "name": "Visualization",
                      "value": 16540
                    }
                  ]
                }
              ]
            },
            columnsTable:[
                {
                   title:'年龄段',
                   dataIndex:'label'
                },{
                    title:'数量',
                    dataIndex:'num'
                }
            ],
            tableData:[
                {
                    year:'12岁',
                    sum:21
                },{
                    year:'22岁',
                    sum:55
                }
            ],
            radarData:[
                { item: 'Design', a: 70, b: 30 },
                { item: 'Development', a: 60, b: 70 },
                { item: 'Marketing', a: 50, b: 60 },
                { item: 'Users', a: 40, b: 50 },
                { item: 'Test', a: 60, b: 70 },
                { item: 'Language', a: 70, b: 50 },
                { item: 'Technology', a: 50, b: 40 },
                { item: 'Support', a: 30, b: 40 },
                { item: 'Sales', a: 60, b: 40 },
                { item: 'UX', a: 50, b: 60 },
            ],
            hotData:[
              {
                "g": 541,
                "l": 85,
                "tmp": 858
              }, {
                "g": 937,
                "l": 465,
                "tmp": 299
              }, {
                "g": 566,
                "l": 131,
                "tmp": 326
              }, {
                "g": 738,
                "l": 130,
                "tmp": 262
              }, {
                "g": 85,
                "l": 207,
                "tmp": 184
              }, {
                "g": 321,
                "l": 273,
                "tmp": 312
              }, {
                "g": 552,
                "l": 153,
                "tmp": 367
              }, {
                "g": 698,
                "l": 454,
                "tmp": 194
              }, {
                "g": 409,
                "l": 440,
                "tmp": 754
              }, {
                "g": 905,
                "l": 84,
                "tmp": 891
              }, {
                "g": 186,
                "l": 127,
                "tmp": 55
              }, {
                "g": 636,
                "l": 117,
                "tmp": 97
              }, {
                "g": 990,
                "l": 29,
                "tmp": 549
              }, {
                "g": 284,
                "l": 79,
                "tmp": 570
              }, {
                "g": 28,
                "l": 313,
                "tmp": 320
              }, {
                "g": 146,
                "l": 204,
                "tmp": 206
              }, {
                "g": 257,
                "l": 327,
                "tmp": 540
              }, {
                "g": 277,
                "l": 412,
                "tmp": 766
              }, {
                "g": 352,
                "l": 343,
                "tmp": 944
              }, {
                "g": 875,
                "l": 76,
                "tmp": 789
              }, {
                "g": 969,
                "l": 160,
                "tmp": 934
              }, {
                "g": 909,
                "l": 153,
                "tmp": 779
              }, {
                "g": 227,
                "l": 194,
                "tmp": 471
              }, {
                "g": 618,
                "l": 316,
                "tmp": 400
              }, {
                "g": 910,
                "l": 98,
                "tmp": 289
              }, {
                "g": 718,
                "l": 181,
                "tmp": 409
              }, {
                "g": 285,
                "l": 448,
                "tmp": 894
              }, {
                "g": 89,
                "l": 303,
                "tmp": 567
              }, {
                "g": 900,
                "l": 195,
                "tmp": 132
              }, {
                "g": 780,
                "l": 453,
                "tmp": 741
              }, {
                "g": 337,
                "l": 243,
                "tmp": 715
              }, {
                "g": 156,
                "l": 206,
                "tmp": 720
              }, {
                "g": 238,
                "l": 11,
                "tmp": 244
              }, {
                "g": 303,
                "l": 174,
                "tmp": 320
              }, {
                "g": 607,
                "l": 234,
                "tmp": 1
              }, {
                "g": 460,
                "l": 127,
                "tmp": 176
              }, {
                "g": 85,
                "l": 435,
                "tmp": 548
              }, {
                "g": 938,
                "l": 198,
                "tmp": 423
              }, {
                "g": 336,
                "l": 387,
                "tmp": 607
              }, {
                "g": 331,
                "l": 1,
                "tmp": 535
              }, {
                "g": 320,
                "l": 342,
                "tmp": 635
              }, {
                "g": 620,
                "l": 178,
                "tmp": 345
              }, {
                "g": 20,
                "l": 475,
                "tmp": 561
              }, {
                "g": 878,
                "l": 427,
                "tmp": 375
              }, {
                "g": 42,
                "l": 412,
                "tmp": 115
              }, {
                "g": 383,
                "l": 12,
                "tmp": 422
              }, {
                "g": 821,
                "l": 442,
                "tmp": 756
              }, {
                "g": 737,
                "l": 319,
                "tmp": 676
              }, {
                "g": 810,
                "l": 180,
                "tmp": 834
              }, {
                "g": 45,
                "l": 11,
                "tmp": 552
              }, {
                "g": 119,
                "l": 422,
                "tmp": 801
              }, {
                "g": 634,
                "l": 198,
                "tmp": 816
              }, {
                "g": 980,
                "l": 168,
                "tmp": 44
              }, {
                "g": 595,
                "l": 496,
                "tmp": 188
              }, {
                "g": 729,
                "l": 100,
                "tmp": 88
              }, {
                "g": 635,
                "l": 479,
                "tmp": 362
              }, {
                "g": 40,
                "l": 384,
                "tmp": 441
              }, {
                "g": 334,
                "l": 238,
                "tmp": 231
              }, {
                "g": 351,
                "l": 362,
                "tmp": 724
              }, {
                "g": 70,
                "l": 217,
                "tmp": 816
              }, {
                "g": 515,
                "l": 245,
                "tmp": 567
              }, {
                "g": 842,
                "l": 209,
                "tmp": 703
              }, {
                "g": 496,
                "l": 226,
                "tmp": 720
              }, {
                "g": 998,
                "l": 52,
                "tmp": 863
              }, {
                "g": 43,
                "l": 51,
                "tmp": 622
              }, {
                "g": 253,
                "l": 210,
                "tmp": 610
              }, {
                "g": 775,
                "l": 491,
                "tmp": 748
              }, {
                "g": 766,
                "l": 157,
                "tmp": 804
              }, {
                "g": 302,
                "l": 202,
                "tmp": 489
              }, {
                "g": 463,
                "l": 126,
                "tmp": 761
              }, {
                "g": 308,
                "l": 88,
                "tmp": 996
              }, {
                "g": 432,
                "l": 239,
                "tmp": 247
              }, {
                "g": 793,
                "l": 96,
                "tmp": 759
              }, {
                "g": 297,
                "l": 173,
                "tmp": 428
              }, {
                "g": 637,
                "l": 437,
                "tmp": 465
              }, {
                "g": 296,
                "l": 490,
                "tmp": 667
              }, {
                "g": 586,
                "l": 172,
                "tmp": 202
              }, {
                "g": 435,
                "l": 100,
                "tmp": 103
              }, {
                "g": 110,
                "l": 399,
                "tmp": 936
              }, {
                "g": 130,
                "l": 19,
                "tmp": 36
              }, {
                "g": 54,
                "l": 442,
                "tmp": 692
              }, {
                "g": 106,
                "l": 71,
                "tmp": 770
              }, {
                "g": 804,
                "l": 365,
                "tmp": 450
              }, {
                "g": 106,
                "l": 5,
                "tmp": 264
              }, {
                "g": 730,
                "l": 139,
                "tmp": 520
              }, {
                "g": 305,
                "l": 320,
                "tmp": 888
              }, {
                "g": 994,
                "l": 230,
                "tmp": 71
              }, {
                "g": 503,
                "l": 401,
                "tmp": 408
              }, {
                "g": 394,
                "l": 210,
                "tmp": 945
              }, {
                "g": 142,
                "l": 176,
                "tmp": 85
              }, {
                "g": 840,
                "l": 470,
                "tmp": 940
              }, {
                "g": 649,
                "l": 243,
                "tmp": 872
              }, {
                "g": 260,
                "l": 427,
                "tmp": 986
              }, {
                "g": 403,
                "l": 333,
                "tmp": 522
              }, {
                "g": 261,
                "l": 174,
                "tmp": 145
              }, {
                "g": 581,
                "l": 109,
                "tmp": 877
              }, {
                "g": 377,
                "l": 363,
                "tmp": 979
              }, {
                "g": 242,
                "l": 49,
                "tmp": 85
              }, {
                "g": 241,
                "l": 201,
                "tmp": 807
              }, {
                "g": 859,
                "l": 120,
                "tmp": 167
              }, {
                "g": 11,
                "l": 413,
                "tmp": 102
              }, {
                "g": 866,
                "l": 35,
                "tmp": 642
              }, {
                "g": 226,
                "l": 288,
                "tmp": 208
              }, {
                "g": 578,
                "l": 449,
                "tmp": 27
              }, {
                "g": 224,
                "l": 386,
                "tmp": 263
              }, {
                "g": 909,
                "l": 230,
                "tmp": 342
              }, {
                "g": 828,
                "l": 252,
                "tmp": 136
              }, {
                "g": 246,
                "l": 336,
                "tmp": 825
              }, {
                "g": 376,
                "l": 227,
                "tmp": 914
              }, {
                "g": 416,
                "l": 313,
                "tmp": 318
              }, {
                "g": 453,
                "l": 184,
                "tmp": 513
              }, {
                "g": 633,
                "l": 382,
                "tmp": 486
              }, {
                "g": 327,
                "l": 188,
                "tmp": 498
              }, {
                "g": 617,
                "l": 25,
                "tmp": 193
              }, {
                "g": 283,
                "l": 224,
                "tmp": 949
              }, {
                "g": 400,
                "l": 18,
                "tmp": 533
              }, {
                "g": 948,
                "l": 123,
                "tmp": 57
              }, {
                "g": 514,
                "l": 477,
                "tmp": 663
              }, {
                "g": 532,
                "l": 405,
                "tmp": 225
              }, {
                "g": 723,
                "l": 357,
                "tmp": 743
              }, {
                "g": 810,
                "l": 170,
                "tmp": 57
              }, {
                "g": 362,
                "l": 275,
                "tmp": 371
              }, {
                "g": 642,
                "l": 421,
                "tmp": 48
              }, {
                "g": 934,
                "l": 431,
                "tmp": 622
              }, {
                "g": 45,
                "l": 39,
                "tmp": 642
              }, {
                "g": 401,
                "l": 401,
                "tmp": 660
              }, {
                "g": 678,
                "l": 257,
                "tmp": 225
              }, {
                "g": 696,
                "l": 201,
                "tmp": 854
              }, {
                "g": 807,
                "l": 372,
                "tmp": 673
              }, {
                "g": 119,
                "l": 402,
                "tmp": 474
              }, {
                "g": 498,
                "l": 142,
                "tmp": 414
              }, {
                "g": 900,
                "l": 338,
                "tmp": 10
              }, {
                "g": 176,
                "l": 143,
                "tmp": 577
              }, {
                "g": 909,
                "l": 134,
                "tmp": 427
              }, {
                "g": 42,
                "l": 443,
                "tmp": 247
              }, {
                "g": 667,
                "l": 97,
                "tmp": 860
              }, {
                "g": 497,
                "l": 463,
                "tmp": 842
              }, {
                "g": 252,
                "l": 364,
                "tmp": 853
              }, {
                "g": 191,
                "l": 40,
                "tmp": 501
              }, {
                "g": 471,
                "l": 334,
                "tmp": 913
              }, {
                "g": 877,
                "l": 157,
                "tmp": 70
              }, {
                "g": 198,
                "l": 24,
                "tmp": 131
              }, {
                "g": 709,
                "l": 434,
                "tmp": 110
              }, {
                "g": 740,
                "l": 352,
                "tmp": 658
              }, {
                "g": 406,
                "l": 322,
                "tmp": 716
              }, {
                "g": 304,
                "l": 288,
                "tmp": 718
              }, {
                "g": 765,
                "l": 241,
                "tmp": 374
              }, {
                "g": 566,
                "l": 224,
                "tmp": 299
              }, {
                "g": 316,
                "l": 284,
                "tmp": 147
              }, {
                "g": 167,
                "l": 213,
                "tmp": 783
              }, {
                "g": 550,
                "l": 314,
                "tmp": 903
              }, {
                "g": 10,
                "l": 266,
                "tmp": 175
              }, {
                "g": 711,
                "l": 408,
                "tmp": 938
              }, {
                "g": 691,
                "l": 338,
                "tmp": 274
              }, {
                "g": 523,
                "l": 36,
                "tmp": 298
              }, {
                "g": 910,
                "l": 17,
                "tmp": 201
              }, {
                "g": 40,
                "l": 125,
                "tmp": 91
              }, {
                "g": 106,
                "l": 233,
                "tmp": 603
              }, {
                "g": 297,
                "l": 64,
                "tmp": 165
              }, {
                "g": 723,
                "l": 178,
                "tmp": 127
              }, {
                "g": 785,
                "l": 93,
                "tmp": 614
              }, {
                "g": 672,
                "l": 465,
                "tmp": 63
              }, {
                "g": 843,
                "l": 301,
                "tmp": 507
              }, {
                "g": 766,
                "l": 450,
                "tmp": 647
              }, {
                "g": 84,
                "l": 225,
                "tmp": 358
              }, {
                "g": 947,
                "l": 478,
                "tmp": 131
              }, {
                "g": 202,
                "l": 455,
                "tmp": 193
              }, {
                "g": 548,
                "l": 399,
                "tmp": 819
              }, {
                "g": 199,
                "l": 62,
                "tmp": 182
              }, {
                "g": 362,
                "l": 229,
                "tmp": 277
              }, {
                "g": 704,
                "l": 358,
                "tmp": 428
              }, {
                "g": 124,
                "l": 24,
                "tmp": 414
              }, {
                "g": 655,
                "l": 363,
                "tmp": 213
              }, {
                "g": 897,
                "l": 184,
                "tmp": 37
              }, {
                "g": 727,
                "l": 296,
                "tmp": 667
              }, {
                "g": 299,
                "l": 305,
                "tmp": 23
              }, {
                "g": 920,
                "l": 39,
                "tmp": 776
              }, {
                "g": 822,
                "l": 195,
                "tmp": 400
              }, {
                "g": 694,
                "l": 229,
                "tmp": 770
              }, {
                "g": 886,
                "l": 342,
                "tmp": 485
              }, {
                "g": 757,
                "l": 375,
                "tmp": 441
              }, {
                "g": 730,
                "l": 170,
                "tmp": 595
              }, {
                "g": 734,
                "l": 238,
                "tmp": 580
              }, {
                "g": 671,
                "l": 11,
                "tmp": 979
              }, {
                "g": 688,
                "l": 37,
                "tmp": 685
              }, {
                "g": 310,
                "l": 492,
                "tmp": 576
              }, {
                "g": 245,
                "l": 488,
                "tmp": 683
              }, {
                "g": 378,
                "l": 293,
                "tmp": 553
              }, {
                "g": 783,
                "l": 45,
                "tmp": 573
              }, {
                "g": 948,
                "l": 93,
                "tmp": 351
              }, {
                "g": 921,
                "l": 17,
                "tmp": 893
              }, {
                "g": 539,
                "l": 372,
                "tmp": 232
              }, {
                "g": 555,
                "l": 31,
                "tmp": 424
              }, {
                "g": 282,
                "l": 435,
                "tmp": 336
              }, {
                "g": 334,
                "l": 305,
                "tmp": 928
              }, {
                "g": 33,
                "l": 160,
                "tmp": 644
              }, {
                "g": 610,
                "l": 446,
                "tmp": 123
              }, {
                "g": 750,
                "l": 209,
                "tmp": 856
              }, {
                "g": 257,
                "l": 259,
                "tmp": 990
              }, {
                "g": 815,
                "l": 21,
                "tmp": 461
              }, {
                "g": 351,
                "l": 130,
                "tmp": 625
              }, {
                "g": 406,
                "l": 367,
                "tmp": 344
              }, {
                "g": 26,
                "l": 207,
                "tmp": 786
              }, {
                "g": 814,
                "l": 93,
                "tmp": 93
              }, {
                "g": 218,
                "l": 311,
                "tmp": 981
              }, {
                "g": 394,
                "l": 310,
                "tmp": 130
              }, {
                "g": 767,
                "l": 110,
                "tmp": 838
              }, {
                "g": 741,
                "l": 369,
                "tmp": 23
              }, {
                "g": 988,
                "l": 241,
                "tmp": 109
              }, {
                "g": 273,
                "l": 80,
                "tmp": 516
              }, {
                "g": 487,
                "l": 457,
                "tmp": 817
              }, {
                "g": 245,
                "l": 135,
                "tmp": 128
              }, {
                "g": 424,
                "l": 228,
                "tmp": 517
              }, {
                "g": 818,
                "l": 219,
                "tmp": 385
              }, {
                "g": 512,
                "l": 225,
                "tmp": 608
              }, {
                "g": 482,
                "l": 113,
                "tmp": 352
              }, {
                "g": 598,
                "l": 148,
                "tmp": 755
              }, {
                "g": 484,
                "l": 168,
                "tmp": 471
              }, {
                "g": 739,
                "l": 187,
                "tmp": 583
              }, {
                "g": 484,
                "l": 363,
                "tmp": 820
              }, {
                "g": 99,
                "l": 61,
                "tmp": 891
              }, {
                "g": 121,
                "l": 340,
                "tmp": 904
              }, {
                "g": 968,
                "l": 321,
                "tmp": 554
              }, {
                "g": 851,
                "l": 474,
                "tmp": 482
              }, {
                "g": 998,
                "l": 414,
                "tmp": 133
              }, {
                "g": 980,
                "l": 21,
                "tmp": 911
              }, {
                "g": 519,
                "l": 381,
                "tmp": 99
              }, {
                "g": 707,
                "l": 55,
                "tmp": 651
              }, {
                "g": 563,
                "l": 422,
                "tmp": 5
              }, {
                "g": 23,
                "l": 495,
                "tmp": 421
              }, {
                "g": 613,
                "l": 477,
                "tmp": 557
              }, {
                "g": 735,
                "l": 432,
                "tmp": 314
              }, {
                "g": 441,
                "l": 161,
                "tmp": 447
              }, {
                "g": 896,
                "l": 327,
                "tmp": 30
              }, {
                "g": 673,
                "l": 58,
                "tmp": 826
              }, {
                "g": 346,
                "l": 165,
                "tmp": 68
              }, {
                "g": 451,
                "l": 225,
                "tmp": 116
              }, {
                "g": 981,
                "l": 301,
                "tmp": 50
              }, {
                "g": 141,
                "l": 354,
                "tmp": 922
              }, {
                "g": 759,
                "l": 301,
                "tmp": 350
              }, {
                "g": 521,
                "l": 145,
                "tmp": 193
              }, {
                "g": 873,
                "l": 441,
                "tmp": 470
              }, {
                "g": 794,
                "l": 41,
                "tmp": 990
              }, {
                "g": 545,
                "l": 302,
                "tmp": 70
              }, {
                "g": 241,
                "l": 98,
                "tmp": 81
              }, {
                "g": 271,
                "l": 495,
                "tmp": 179
              }, {
                "g": 910,
                "l": 190,
                "tmp": 678
              }, {
                "g": 727,
                "l": 380,
                "tmp": 275
              }, {
                "g": 310,
                "l": 133,
                "tmp": 523
              }, {
                "g": 839,
                "l": 474,
                "tmp": 324
              }, {
                "g": 16,
                "l": 453,
                "tmp": 842
              }, {
                "g": 402,
                "l": 80,
                "tmp": 634
              }, {
                "g": 953,
                "l": 370,
                "tmp": 261
              }, {
                "g": 440,
                "l": 369,
                "tmp": 109
              }, {
                "g": 887,
                "l": 184,
                "tmp": 239
              }, {
                "g": 309,
                "l": 105,
                "tmp": 303
              }, {
                "g": 63,
                "l": 360,
                "tmp": 199
              }, {
                "g": 999,
                "l": 455,
                "tmp": 141
              }, {
                "g": 928,
                "l": 257,
                "tmp": 572
              }, {
                "g": 750,
                "l": 3,
                "tmp": 18
              }, {
                "g": 266,
                "l": 309,
                "tmp": 350
              }, {
                "g": 40,
                "l": 52,
                "tmp": 588
              }, {
                "g": 448,
                "l": 203,
                "tmp": 256
              }, {
                "g": 283,
                "l": 264,
                "tmp": 125
              }, {
                "g": 238,
                "l": 31,
                "tmp": 231
              }, {
                "g": 819,
                "l": 461,
                "tmp": 669
              }, {
                "g": 84,
                "l": 22,
                "tmp": 796
              }, {
                "g": 605,
                "l": 284,
                "tmp": 296
              }, {
                "g": 431,
                "l": 86,
                "tmp": 21
              }, {
                "g": 926,
                "l": 182,
                "tmp": 552
              }, {
                "g": 195,
                "l": 468,
                "tmp": 526
              }, {
                "g": 807,
                "l": 188,
                "tmp": 764
              }, {
                "g": 816,
                "l": 326,
                "tmp": 696
              }, {
                "g": 314,
                "l": 125,
                "tmp": 648
              }, {
                "g": 952,
                "l": 50,
                "tmp": 999
              }, {
                "g": 894,
                "l": 112,
                "tmp": 454
              }, {
                "g": 670,
                "l": 437,
                "tmp": 440
              }, {
                "g": 878,
                "l": 494,
                "tmp": 637
              }, {
                "g": 259,
                "l": 278,
                "tmp": 871
              }, {
                "g": 461,
                "l": 449,
                "tmp": 264
              }, {
                "g": 15,
                "l": 50,
                "tmp": 17
              }, {
                "g": 770,
                "l": 151,
                "tmp": 622
              }, {
                "g": 167,
                "l": 59,
                "tmp": 387
              }, {
                "g": 315,
                "l": 412,
                "tmp": 907
              }, {
                "g": 393,
                "l": 110,
                "tmp": 162
              }, {
                "g": 197,
                "l": 71,
                "tmp": 394
              }, {
                "g": 306,
                "l": 354,
                "tmp": 183
              }, {
                "g": 593,
                "l": 113,
                "tmp": 736
              }, {
                "g": 214,
                "l": 249,
                "tmp": 611
              }, {
                "g": 214,
                "l": 78,
                "tmp": 589
              }, {
                "g": 521,
                "l": 218,
                "tmp": 571
              }, {
                "g": 149,
                "l": 299,
                "tmp": 939
              }, {
                "g": 841,
                "l": 379,
                "tmp": 510
              }, {
                "g": 197,
                "l": 127,
                "tmp": 355
              }, {
                "g": 187,
                "l": 340,
                "tmp": 356
              }, {
                "g": 793,
                "l": 171,
                "tmp": 138
              }, {
                "g": 340,
                "l": 184,
                "tmp": 597
              }, {
                "g": 702,
                "l": 317,
                "tmp": 313
              }, {
                "g": 439,
                "l": 383,
                "tmp": 217
              }, {
                "g": 337,
                "l": 137,
                "tmp": 251
              }, {
                "g": 916,
                "l": 99,
                "tmp": 703
              }, {
                "g": 636,
                "l": 405,
                "tmp": 524
              }, {
                "g": 203,
                "l": 234,
                "tmp": 478
              }, {
                "g": 36,
                "l": 138,
                "tmp": 928
              }, {
                "g": 876,
                "l": 20,
                "tmp": 636
              }, {
                "g": 790,
                "l": 97,
                "tmp": 553
              }, {
                "g": 551,
                "l": 73,
                "tmp": 74
              }, {
                "g": 258,
                "l": 296,
                "tmp": 766
              }, {
                "g": 278,
                "l": 219,
                "tmp": 387
              }, {
                "g": 540,
                "l": 309,
                "tmp": 422
              }, {
                "g": 686,
                "l": 418,
                "tmp": 577
              }, {
                "g": 192,
                "l": 184,
                "tmp": 625
              }, {
                "g": 921,
                "l": 317,
                "tmp": 593
              }, {
                "g": 544,
                "l": 24,
                "tmp": 911
              }, {
                "g": 699,
                "l": 344,
                "tmp": 381
              }, {
                "g": 416,
                "l": 92,
                "tmp": 334
              }, {
                "g": 233,
                "l": 60,
                "tmp": 462
              }, {
                "g": 157,
                "l": 377,
                "tmp": 642
              }, {
                "g": 937,
                "l": 483,
                "tmp": 890
              }, {
                "g": 501,
                "l": 402,
                "tmp": 277
              }, {
                "g": 246,
                "l": 270,
                "tmp": 467
              }, {
                "g": 433,
                "l": 118,
                "tmp": 427
              }, {
                "g": 788,
                "l": 499,
                "tmp": 214
              }, {
                "g": 706,
                "l": 332,
                "tmp": 164
              }, {
                "g": 366,
                "l": 315,
                "tmp": 909
              }, {
                "g": 392,
                "l": 272,
                "tmp": 755
              }, {
                "g": 817,
                "l": 393,
                "tmp": 512
              }, {
                "g": 192,
                "l": 189,
                "tmp": 237
              }, {
                "g": 761,
                "l": 50,
                "tmp": 361
              }, {
                "g": 600,
                "l": 267,
                "tmp": 783
              }, {
                "g": 911,
                "l": 369,
                "tmp": 579
              }, {
                "g": 55,
                "l": 206,
                "tmp": 299
              }, {
                "g": 646,
                "l": 92,
                "tmp": 5
              }, {
                "g": 587,
                "l": 311,
                "tmp": 213
              }, {
                "g": 87,
                "l": 428,
                "tmp": 206
              }, {
                "g": 753,
                "l": 87,
                "tmp": 804
              }, {
                "g": 454,
                "l": 483,
                "tmp": 996
              }, {
                "g": 906,
                "l": 268,
                "tmp": 708
              }, {
                "g": 885,
                "l": 179,
                "tmp": 99
              }, {
                "g": 549,
                "l": 274,
                "tmp": 734
              }, {
                "g": 348,
                "l": 154,
                "tmp": 997
              }, {
                "g": 672,
                "l": 319,
                "tmp": 941
              }, {
                "g": 415,
                "l": 118,
                "tmp": 901
              }, {
                "g": 390,
                "l": 252,
                "tmp": 580
              }, {
                "g": 532,
                "l": 346,
                "tmp": 216
              }, {
                "g": 878,
                "l": 19,
                "tmp": 669
              }, {
                "g": 326,
                "l": 309,
                "tmp": 797
              }, {
                "g": 496,
                "l": 497,
                "tmp": 348
              }, {
                "g": 243,
                "l": 189,
                "tmp": 725
              }, {
                "g": 140,
                "l": 310,
                "tmp": 396
              }, {
                "g": 343,
                "l": 433,
                "tmp": 472
              }, {
                "g": 342,
                "l": 133,
                "tmp": 969
              }, {
                "g": 947,
                "l": 137,
                "tmp": 966
              }, {
                "g": 710,
                "l": 423,
                "tmp": 231
              }, {
                "g": 770,
                "l": 296,
                "tmp": 43
              }, {
                "g": 557,
                "l": 173,
                "tmp": 268
              }, {
                "g": 66,
                "l": 178,
                "tmp": 392
              }, {
                "g": 960,
                "l": 455,
                "tmp": 266
              }, {
                "g": 225,
                "l": 147,
                "tmp": 396
              }, {
                "g": 679,
                "l": 384,
                "tmp": 211
              }, {
                "g": 757,
                "l": 66,
                "tmp": 94
              }, {
                "g": 456,
                "l": 206,
                "tmp": 120
              }, {
                "g": 644,
                "l": 111,
                "tmp": 767
              }, {
                "g": 387,
                "l": 276,
                "tmp": 587
              }, {
                "g": 669,
                "l": 409,
                "tmp": 43
              }, {
                "g": 752,
                "l": 462,
                "tmp": 802
              }, {
                "g": 829,
                "l": 75,
                "tmp": 445
              }, {
                "g": 263,
                "l": 282,
                "tmp": 423
              }, {
                "g": 761,
                "l": 496,
                "tmp": 771
              }, {
                "g": 830,
                "l": 492,
                "tmp": 117
              }, {
                "g": 740,
                "l": 92,
                "tmp": 355
              }, {
                "g": 840,
                "l": 339,
                "tmp": 311
              }, {
                "g": 964,
                "l": 196,
                "tmp": 332
              }, {
                "g": 439,
                "l": 289,
                "tmp": 638
              }, {
                "g": 316,
                "l": 194,
                "tmp": 851
              }, {
                "g": 833,
                "l": 178,
                "tmp": 680
              }, {
                "g": 694,
                "l": 458,
                "tmp": 876
              }, {
                "g": 793,
                "l": 305,
                "tmp": 777
              }, {
                "g": 273,
                "l": 363,
                "tmp": 585
              }, {
                "g": 194,
                "l": 356,
                "tmp": 619
              }, {
                "g": 225,
                "l": 56,
                "tmp": 520
              }, {
                "g": 658,
                "l": 342,
                "tmp": 123
              }, {
                "g": 940,
                "l": 464,
                "tmp": 572
              }, {
                "g": 500,
                "l": 181,
                "tmp": 629
              }, {
                "g": 100,
                "l": 60,
                "tmp": 283
              }, {
                "g": 236,
                "l": 263,
                "tmp": 129
              }, {
                "g": 656,
                "l": 395,
                "tmp": 320
              }, {
                "g": 134,
                "l": 306,
                "tmp": 629
              }, {
                "g": 87,
                "l": 79,
                "tmp": 488
              }, {
                "g": 815,
                "l": 433,
                "tmp": 462
              }, {
                "g": 803,
                "l": 223,
                "tmp": 610
              }, {
                "g": 300,
                "l": 68,
                "tmp": 641
              }, {
                "g": 468,
                "l": 133,
                "tmp": 827
              }, {
                "g": 309,
                "l": 147,
                "tmp": 955
              }, {
                "g": 691,
                "l": 215,
                "tmp": 796
              }, {
                "g": 549,
                "l": 481,
                "tmp": 391
              }, {
                "g": 776,
                "l": 29,
                "tmp": 859
              }, {
                "g": 420,
                "l": 478,
                "tmp": 960
              }, {
                "g": 927,
                "l": 7,
                "tmp": 396
              }, {
                "g": 475,
                "l": 160,
                "tmp": 234
              }, {
                "g": 330,
                "l": 463,
                "tmp": 468
              }, {
                "g": 484,
                "l": 206,
                "tmp": 159
              }, {
                "g": 233,
                "l": 245,
                "tmp": 345
              }, {
                "g": 143,
                "l": 144,
                "tmp": 664
              }, {
                "g": 780,
                "l": 247,
                "tmp": 946
              }, {
                "g": 289,
                "l": 391,
                "tmp": 564
              }, {
                "g": 959,
                "l": 183,
                "tmp": 460
              }, {
                "g": 923,
                "l": 192,
                "tmp": 48
              }, {
                "g": 494,
                "l": 318,
                "tmp": 795
              }, {
                "g": 301,
                "l": 20,
                "tmp": 737
              }, {
                "g": 926,
                "l": 135,
                "tmp": 941
              }, {
                "g": 164,
                "l": 268,
                "tmp": 385
              }, {
                "g": 197,
                "l": 318,
                "tmp": 763
              }, {
                "g": 921,
                "l": 325,
                "tmp": 171
              }, {
                "g": 614,
                "l": 464,
                "tmp": 192
              }, {
                "g": 195,
                "l": 103,
                "tmp": 822
              }, {
                "g": 399,
                "l": 261,
                "tmp": 473
              }, {
                "g": 928,
                "l": 410,
                "tmp": 359
              }, {
                "g": 746,
                "l": 77,
                "tmp": 574
              }, {
                "g": 362,
                "l": 422,
                "tmp": 833
              }, {
                "g": 23,
                "l": 83,
                "tmp": 615
              }, {
                "g": 445,
                "l": 295,
                "tmp": 682
              }, {
                "g": 177,
                "l": 8,
                "tmp": 976
              }, {
                "g": 740,
                "l": 448,
                "tmp": 840
              }, {
                "g": 95,
                "l": 265,
                "tmp": 208
              }, {
                "g": 423,
                "l": 278,
                "tmp": 145
              }, {
                "g": 336,
                "l": 255,
                "tmp": 42
              }, {
                "g": 718,
                "l": 207,
                "tmp": 806
              }, {
                "g": 669,
                "l": 171,
                "tmp": 124
              }, {
                "g": 235,
                "l": 64,
                "tmp": 978
              }, {
                "g": 945,
                "l": 167,
                "tmp": 749
              }, {
                "g": 280,
                "l": 294,
                "tmp": 165
              }, {
                "g": 979,
                "l": 0,
                "tmp": 745
              }, {
                "g": 3,
                "l": 101,
                "tmp": 646
              }, {
                "g": 611,
                "l": 91,
                "tmp": 990
              }, {
                "g": 966,
                "l": 97,
                "tmp": 778
              }, {
                "g": 335,
                "l": 51,
                "tmp": 487
              }, {
                "g": 562,
                "l": 354,
                "tmp": 171
              }, {
                "g": 261,
                "l": 161,
                "tmp": 377
              }, {
                "g": 178,
                "l": 309,
                "tmp": 813
              }, {
                "g": 726,
                "l": 344,
                "tmp": 208
              }, {
                "g": 801,
                "l": 194,
                "tmp": 854
              }, {
                "g": 25,
                "l": 136,
                "tmp": 703
              }, {
                "g": 218,
                "l": 210,
                "tmp": 849
              }, {
                "g": 181,
                "l": 19,
                "tmp": 311
              }, {
                "g": 522,
                "l": 392,
                "tmp": 282
              }, {
                "g": 875,
                "l": 360,
                "tmp": 260
              }, {
                "g": 978,
                "l": 481,
                "tmp": 389
              }, {
                "g": 885,
                "l": 335,
                "tmp": 294
              }, {
                "g": 218,
                "l": 270,
                "tmp": 566
              }, {
                "g": 362,
                "l": 316,
                "tmp": 349
              }, {
                "g": 95,
                "l": 359,
                "tmp": 674
              }, {
                "g": 767,
                "l": 184,
                "tmp": 985
              }, {
                "g": 791,
                "l": 378,
                "tmp": 827
              }, {
                "g": 799,
                "l": 426,
                "tmp": 716
              }, {
                "g": 437,
                "l": 183,
                "tmp": 409
              }, {
                "g": 305,
                "l": 85,
                "tmp": 451
              }, {
                "g": 859,
                "l": 357,
                "tmp": 382
              }, {
                "g": 90,
                "l": 61,
                "tmp": 621
              }, {
                "g": 933,
                "l": 347,
                "tmp": 62
              }, {
                "g": 693,
                "l": 208,
                "tmp": 123
              }, {
                "g": 304,
                "l": 222,
                "tmp": 809
              }, {
                "g": 72,
                "l": 243,
                "tmp": 116
              }, {
                "g": 657,
                "l": 9,
                "tmp": 441
              }, {
                "g": 65,
                "l": 199,
                "tmp": 147
              }, {
                "g": 503,
                "l": 208,
                "tmp": 86
              }, {
                "g": 257,
                "l": 274,
                "tmp": 221
              }, {
                "g": 879,
                "l": 32,
                "tmp": 269
              }, {
                "g": 979,
                "l": 432,
                "tmp": 344
              }, {
                "g": 948,
                "l": 52,
                "tmp": 80
              }, {
                "g": 973,
                "l": 181,
                "tmp": 811
              }, {
                "g": 584,
                "l": 438,
                "tmp": 394
              }, {
                "g": 645,
                "l": 357,
                "tmp": 89
              }, {
                "g": 387,
                "l": 457,
                "tmp": 20
              }, {
                "g": 686,
                "l": 240,
                "tmp": 829
              }, {
                "g": 419,
                "l": 185,
                "tmp": 722
              }, {
                "g": 869,
                "l": 365,
                "tmp": 455
              }, {
                "g": 376,
                "l": 434,
                "tmp": 586
              }, {
                "g": 219,
                "l": 418,
                "tmp": 619
              }, {
                "g": 458,
                "l": 186,
                "tmp": 808
              }, {
                "g": 26,
                "l": 427,
                "tmp": 922
              }, {
                "g": 61,
                "l": 116,
                "tmp": 688
              }, {
                "g": 247,
                "l": 243,
                "tmp": 645
              }, {
                "g": 990,
                "l": 93,
                "tmp": 844
              }, {
                "g": 757,
                "l": 273,
                "tmp": 81
              }, {
                "g": 396,
                "l": 387,
                "tmp": 15
              }, {
                "g": 518,
                "l": 425,
                "tmp": 268
              }, {
                "g": 246,
                "l": 48,
                "tmp": 423
              }, {
                "g": 841,
                "l": 426,
                "tmp": 530
              }, {
                "g": 844,
                "l": 69,
                "tmp": 571
              }, {
                "g": 818,
                "l": 31,
                "tmp": 27
              }, {
                "g": 248,
                "l": 180,
                "tmp": 168
              }, {
                "g": 251,
                "l": 185,
                "tmp": 462
              }, {
                "g": 727,
                "l": 57,
                "tmp": 15
              }, {
                "g": 636,
                "l": 175,
                "tmp": 7
              }, {
                "g": 310,
                "l": 127,
                "tmp": 494
              }, {
                "g": 380,
                "l": 442,
                "tmp": 609
              }, {
                "g": 923,
                "l": 192,
                "tmp": 43
              }, {
                "g": 161,
                "l": 487,
                "tmp": 817
              }, {
                "g": 596,
                "l": 320,
                "tmp": 718
              }],
            scatterData:[], 
            bubbllesData:[],
            cloudData:[
                {
                    x:"China",
                    value:1383220000,
                    category:"asia"
                },
                {
                    x:"India",
                    value:1316000000,
                    category:"asia"
                },
                {
                    x:"United States",
                    value:324982000,
                    category:"america"
                },
                {
                    x:"Indonesia",
                    value:263510000,
                    category:"asia"
                },
                {
                    x:"Brazil",
                    value:207505000,
                    category:"america"
                },
                {
                    x:"Pakistan",
                    value:191836000,
                    category:"asia"
                },
                {
                    x:"Nigeria",
                    value:191836000,
                    category:"africa"
                },
                {
                    x:"Bangladesh",
                    value:162459000,
                    category:"asia"
                },
                {
                    x:"Russia",
                    value:146804372,
                    category:"europe"
                },
                {
                    x:"Japan",
                    value:126790000,
                    category:"asia"
                },
                {
                    x:"Mexico",
                    value:123518000,
                    category:"america"
                },
                {
                    x:"Ethiopia",
                    value:104345000,
                    category:"africa"
                },
                {
                    x:"Philippines",
                    value:104037000,
                    category:"asia"
                },
                {
                    x:"Egypt",
                    value:93013300,
                    category:"africa"
                },
                {
                    x:"Vietnam",
                    value:92700000,
                    category:"asia"
                },
                {
                    x:"Germany",
                    value:82800000,
                    category:"europe"
                },
                {
                    x:"Democratic Pepublic of the Congo",
                    value:82243000,
                    category:"africa"
                },
                {
                    x:"Iran",
                    value:80135400,
                    category:"asia"
                },
                {
                    x:"Turkey",
                    value:79814871,
                    category:"asia"
                },
            ],
            funnelRenderData:[],
          };   
    }

    componentDidMount() {
        const { populationSchoolStat} = this.props.House;
        const data = populationSchoolStat.chartData.age;
        //文字数据
        let strData = '';
        let total = `共${data.sum}人，其中：`;
        for(let i=0;i<data.stat.length;i++){
            if(i===data.stat.length-1){
                strData+=`${data.stat[i].label}:${data.stat[i].num}人。`
            }else{
                strData+=`${data.stat[i].label}:${data.stat[i].num}人，`
            }
        }
        strData = total+strData
        let bubbllesData = [];
        bubbllesData=data.stat.map(item=>{
          return {
            ...item,
            continent:item.label,
          }
        })
        let funnelRenderData = {};
        funnelRenderData.stat = data.stat.sort((a,b)=>{
          return b.num-a.num
        })
        funnelRenderData.sum = data.sum;
        let relationData={
          label:'学龄人口'
        }
        this.setState({
            strData:strData,
            tableData:data.stat,
            lineImgData:data.stat,
            curveData:data.stat,
            columnarData:data.stat,
            areaData:data.stat,
            breadData:data.stat,
            bubbllesData:bubbllesData,
            funnelRenderData:funnelRenderData,
            cloudData:data.stat,
            scatterData:data.stat,
            radarData:data.stat,
            coordinatesData:data.stat,
            relationData:{
              ...relationData,
              num:data.sum,
              children:data.stat
            }
        })
    }

    componentWillUnmount() {
    
    }

    componentWillReceiveProps(props) {
        
    }

    //文本显示
    textImgRenderFun=()=>{
        const { strData } = this.state;
        return strData
    }

    //表格生成
    tableReanderFun=()=>{
        const {tableData,columnsTable} = this.state;
        return <Table
            className={styles.table}
            columns={columnsTable}
            dataSource={tableData}
            bordered
            pagination={false}
        />
    }

    //直线图生成
    lineImgRenderFun=()=>{
        const cols = {
          num: {
            min: 0,
            range:[0,0.93],
            alias:'数量'
          },
          label: {
            range: [0, 0.9],
            alias:'年'
          }
        };
        const { height,padding,lineImgData} = this.state;
        return <Chart height={height} padding={padding} data={lineImgData} scale={cols} forceFit>
          <Axis name="num" title={{
              position:'end',
              offset:15,
              textStyle: {
                fontSize: '12',
                textAlign: 'center',
                fill: '#999',
                fontWeight: 'bold',
                rotate: 0,
                autoRotate:true
            }
          }} />
          <Axis name="label"  title={{
              position:'end',
              offset:5.5,
              textStyle: {
                fontSize: '12',
                textAlign: 'right',
                fill: '#999',
                fontWeight: 'bold',
                rotate: 0
            }
          }}/>
          <Tooltip
            crosshairs={{
              type: "y"
            }}
          />
          <Geom type="line" position="label*num" size={2} 
            tooltip={['label*num',(year,value)=>{
              return {
                  name:'数值', // 要显示的名字
                  value:value,
                  title:year
              }

          }]} />
          <Geom
            type="point"
            position="label*num"
            size={4}
            shape={"circle"}
            style={{
              stroke: "#fff",
              lineWidth: 1
            }}
            tooltip={['label*num',(year,value)=>{
              return {
                  name:'数值', // 要显示的名字
                  value:value,
                  title:year
              }
          }]}
        />
      </Chart>
    }

    //曲线图生成
    curveRenderFun=()=>{
        const cols = {
          lable: {
            range: [0, 1]
          }
        };
        const { height,padding,curveData} = this.state;
        return <Chart height={height} padding={padding} data={curveData} scale={cols} forceFit>
          <Legend />
          <Axis name="label" />
          <Axis
            name="num"
            label={{
              formatter: val => `${val}`
            }}
          />
          <Tooltip
            crosshairs={{
              type: "y"
            }}
          />
          <Geom
            type="line"
            position="label*num"
            size={2}
            // color={"num"}
            shape={"smooth"}
          />
           <Geom
            type="point"
            position="label*num"
            size={4}
            color={"label"}
            shape={"circle"}
            style={{
              stroke:"#fff",
              lineWidth:1
            }}
          />
        </Chart>
        
    }

    //柱状图生成
    columnarRenderFun=()=>{
      const cols = {
        sales: {
          tickInterval: 20
        }
      };
      const { height,padding,columnarData} = this.state;
      return <Chart height={height} padding={padding} data={columnarData} scale={cols} forceFit>
        <Axis name="label" />
        <Axis name="num" />
        <Tooltip
          // crosshairs用于设置 tooltip 的辅助线或者辅助框
          // crosshairs={{
          //  type: "y"
          // }}
        />
        <Geom type="interval" position="label*num" />
      </Chart>
    }

    //面积图生成
    areaRenderFun=()=>{
      const cols = {
        value: {
          min: 10000
        },
        year: {
          range: [0, 1]
        }
      };
      const { height,padding,areaData} = this.state;
      return  <Chart height={height}  padding={padding} data={areaData} scale={cols} forceFit>
        <Axis name="label" />
        <Axis
          name="num"
          label={{
            formatter: val => {
              return (val / 10000).toFixed(1) + "k";
            }
          }}
        />
        <Tooltip
          crosshairs={{
            type: "line"
          }}
        />
        <Geom type="area" position="label*num" />
        <Geom type="line" position="label*num" size={2} />
      </Chart>
    }

    //雷达图生成
    radarRenderFun=()=>{
        const { height,padding,radarData} = this.state;
        const { DataView } = DataSet;
        const dv = new DataView().source(radarData);
        const range = dv.range('num');
        const min = 2*range[0]/3;
        const max = range[1];
        dv.transform({
            type: 'fold',
            fields:['num'], // 展开字段集
            key: 'user', // key字段
            value: 'score', // value字段
        });
        return <Chart
            height={height}
            padding={padding}
            data={dv.rows}
            autoFit
            scale={{
              score:{
                  min: min,
                  max: max,
              }
            }}
            interactions={['legend-highlight']}
        >
            <Coordinate type="polar" radius={0.8} />
            <Tooltip shared />
            <Point
                position="label*score"
                color="user"
                shape="circle"
            />
            <Line
                position="label*score"
                color="user"
                size="2"
            />
            <Area
                position="label*score"
                color="user"
            />
            {
                // 棱角和圆形，默认圆形
            }
            <Axis name="score" grid={{ line: {type: 'line'}}} />
            {
                // 不需要轴的最外圈
            }
            <Axis name="label" line={false} />
        </Chart> 
    }

    //散点图生成
    scatterRenderFun=()=>{
        const { height,padding,scatterData} = this.state;
        return <Chart
            height={height}
            data={scatterData}
            autoFit
            padding={padding}
            interactions={['legend-highlight', 'brush']}
        >
            <Point
                position="label*num"
                color={["label", val => {
                  return colorMap[val];
                }]}
                shape="circle"
                style={{
                    fillOpacity: 0.85
                }} />
        </Chart>
    }

    //极坐标图生成
    coordinatesRenderFun=()=>{
        const { height,padding,coordinatesData} = this.state;
        return (
            <Chart height={height} padding={padding} data={coordinatesData} autoFit>
              <Interval
                adjust={[
                 {
                    type: 'dodge',
                    marginRatio: 1,
                  },
                ]}
                color="label"
                position="label*num"
              />
              <Coord type="polar"/>
              <Tooltip shared />
            </Chart>
          );
    }

    //关系图生成
    relationRenderFun=()=>{
      const {relationData} = this.state;
      const DataView = DataSet.DataView;
      const scale = {
        cut: {
          sync: true,
        },
        mean: {
          sync: true,
          tickCount: 5,
        },
      };
      return (
        <Chart
          data={relationData.children}
          width={1224}
          height={540}
          scale={scale}
          key={new Date().getTime()}
        >
          <Tooltip showTitle={false} />
          <Legend />
          <Coord type="theta" />
          <Facet
            type="tree"
            fields={['label']}
            line={{
              stroke: '#c0d0e0',
              smooth: true,
            }}
            
            eachView={(view, facet) => {
              const dv = new DataView();
              dv.source(facet.data)
                .transform({
                  type: 'percent',
                  field: 'num',
                  dimension: 'label',
                  // as: 'percent'
              });

              view.data(dv.rows);
              // view.scale({
              //   percent: {
              //     formatter(val) {
              //       return val;
              //     }
              //   }
              // });
              view.interval().position('num').color('label').adjust('stack');
              view.interaction('element-active');
            }}
          />
        </Chart>
      )
    }

    //气泡图生成
    bubbllesRenderFun=()=>{
        const { height,padding,bubbllesData} = this.state;
        return <Chart data={bubbllesData} height={height} autoFit padding={padding} scale={scale} interactions={['element-active']}>
            <Legend name="num" visible={false} />
            <Point
                position="label*num"
                color={["continent", val => {
                    return colorMap[val];
                }]}
                opacity={1}
                shape="circle"
                size={["num", [4, 45]]}
                style={['continent', (val) => {
                    return {
                        lineWidth: 1,
                        strokeOpacity: 1,
                        fillOpacity: 0.3,
                        opacity: 1,
                        stroke: colorMap[val],
                    };
                }]}
            />
            <Axis name='label' grid={{
                line: {
                    style: {
                        stroke: '#e3e3e3'
                    }
                }
            }} />
            {/* <Axis name='LifeExpectancy' grid={{
                line: {
                    style: {
                        stroke: '#e3e3e3'
                    }
                }
            }} /> */}
	    </Chart>
    }

    //热力图生成
    hotRenderFun=()=>{
        const { height,padding,hotData } = this.state;
        return <Chart
        height={height}
        padding={padding}
        data={hotData}
        autoFit
        scale={{
           tmp: { nice: true }
        }}
      >
        <Tooltip
           showTitle={false}
        />
        <Axis visible={false} />
        <Legend offsetX={10} />
        <Heatmap position={'g*l'} color={['tmp', '#F51D27-#FA541C-#FF8C12-#FFC838-#FAFFA8-#80FF73-#12CCCC-#1890FF-#6E32C2']} />
        <Annotation.Image
         start={['min', 'max']}
         end={['max', 'min']}
        //  src={'https://gw.alipayobjects.com/zos/rmsportal/NeUTMwKtPcPxIFNTWZOZ.png'}
        />
     </Chart>
    }

    //漏斗图生成
    funnelRenderFun=()=>{
        const { DataView } = DataSet;
        const { height,padding,funnelRenderData} = this.state;
        const dv = new DataView().source(funnelRenderData.stat);
        dv.transform({
            type: 'map',
            callback(row) {
                row.percent = row.num / funnelRenderData.sum;
                return row;
            },
        })
        return <Chart
            data={dv.rows}
            autoFit
            height={height}
            padding={padding} 
        >
            <Tooltip
                showTitle={false}
                itemTpl="<li data-index={index} style=&quot;margin-bottom:4px;&quot;><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}<br/><span style=&quot;padding-left: 16px&quot;>占比：{percent}</span><br/></li>"
            />
            {/* <Axis name='percent' grid={null} label={null} /> */}
            {/* <Axis name='label' label={null} line={null} grid={null} tickLine={null} /> */}
            <Coordinate scale={[1, -1]} transpose type="rect" />
            <Legend />
            {dv.rows.map(obj => {
                return (
                    <Annotation.Text
                        top={true}
                        position={[obj.label,0.5]}
        
                        // content={parseInt(obj.num * 100) + "%"}
                        style={{
                            fill: "#fff",
                            fontSize: "12",
                            textAlign: "center",
                            shadowBlur: 2,
                            shadowColor: "rgba(0, 0, 0, .45)"
                        }}
                    />
                );
            })}
            <Interval
                position="label*num"
                adjust="symmetric"
                shape="funnel"
                color={[
                    "label",
                    ["#0050B3", "#1890FF", "#40A9FF", "#69C0FF", "#BAE7FF"]
                ]}
                tooltip={[
                    "label*pv*percent",
                    (action, pv, percent) => {
                        return {
                            name: action,
                            percent: parseInt(percent * 100) + "%",
                            pv: pv
                        };
                    }
                ]}
            >
            </Interval>
        </Chart>
    }

    //标签云图生成
    cloudRenderFun=()=>{
        const {height,padding,cloudData} = this.state;
        const scale = {
            label:{
                nice:false
            },
            y:{
                nice:false
            }
        }
        const dv = new DataSet.View().source(cloudData);
        const range = dv.range('num');
        const min = range[0];
        const max = range[1];
        dv.transform({
            type:'tag-cloud',
            fields:['label','num'],
            size:[600,500],
            font:'Verdana',
            padding:0,
            timeInterval:5000,
            rotate(){
                let random = ~~(Math.random()*4)%4;
                if(random === 2){
                    random = 0;
                }
                return random*90;
            },
            fontSize(d){
                if(d.value){
                    return ((d.value - min)/(max-min)*(40-12))+12;
                }
                return 0;
            }
        })
        return <Chart data={dv.rows} height={height} scale={scale} padding={padding} autoFit>
            <Tooltip showTitle={false}/>
            <Coordinate reflect='y' />
            <Axis name='label' visible={false} />
            <Axis name='y' visible={false} />
            <Legend visible={false} />
            <Geom
                type='point'
                position='label*y'
                color={["label", val => {
                    return colorMap[val];
                }]}
                shape='cloud'
                tooltip='num*label'
            />
            <Interaction type='element-active' />
        </Chart>
    }

    toggle=(type)=>{
        this.setState({
            checkType:type
        })
    }

    closeWindow=()=>{
      const {isOpenImgWindow} = this.props.House;
      this.props.dispatch({
        type: 'House/setIsOpenImgWindow',
        payload: { isOpenImgWindow: !isOpenImgWindow }
      })
    }

    render() {
        const { checkType,height,padding,breadData,hotData} = this.state;
        return (
        <div className={`${styles.box}`}>
            <div className={styles.tabs}>
                <div className={`${styles.btn} ${checkType === 'textImg' ? styles.active:'' }`} onClick={() => this.toggle('textImg')}>文本</div>
                <div className={`${styles.btn} ${checkType === 'tableImg' ? styles.active:'' }`} onClick={() => this.toggle('tableImg')}>表格</div>
                <div  className={`${styles.btn} ${checkType === 'lineImg' ? styles.active:'' }`} onClick={() => this.toggle('lineImg')}>直线图</div>
                <div className={`${styles.btn} ${checkType === 'curve' ? styles.active:'' }`} onClick={() => this.toggle('curve')}>曲线图</div>
                <div className={`${styles.btn} ${checkType === 'columnar' ? styles.active:'' }`} onClick={() => this.toggle('columnar')}>柱状</div>
                <div className={`${styles.btn} ${checkType === 'area' ? styles.active:'' }`} onClick={() => this.toggle('area')}>面积</div>
                <div className={`${styles.btn} ${checkType === 'bread' ? styles.active:'' }`} onClick={() => this.toggle('bread')}>饼图</div>
                <div className={`${styles.btn} ${checkType === 'radar' ? styles.active:'' }`} onClick={() => this.toggle('radar')}>雷达图</div>
                <div className={`${styles.btn} ${checkType === 'scatter' ? styles.active:'' }`} onClick={() => this.toggle('scatter')}>散点图</div>
                <div className={`${styles.btn} ${checkType === 'bubblles' ? styles.active:'' }`} onClick={() => this.toggle('bubblles')}>气泡图</div>
                <div className={`${styles.btn} ${checkType === 'coordinates' ? styles.active:'' }`} onClick={() => this.toggle('coordinates')}>极坐标图</div>
                <div className={`${styles.btn} ${checkType === 'relation' ? styles.active:'' }`} onClick={() => this.toggle('relation')}>关系图</div>
                <div className={`${styles.btn} ${checkType === 'hot' ? styles.active:'' }`} onClick={() => this.toggle('hot')}>热力图</div>
                <div className={`${styles.btn} ${checkType === 'funnel' ? styles.active:'' }`} onClick={() => this.toggle('funnel')}>漏斗图</div>
                <div className={`${styles.btn} ${checkType === 'cloud' ? styles.active:'' }`} onClick={() => this.toggle('cloud')}>标签云图</div>
            </div>
            <div className={styles.img}>
                {
                    checkType === 'textImg' && this.textImgRenderFun()
                }
                {
                    checkType === 'tableImg' && this.tableReanderFun()
                }
                {
                    checkType === 'lineImg' && this.lineImgRenderFun()
                }
                {
                    checkType === 'curve' && this.curveRenderFun()
                }
                {
                    checkType === 'columnar' && this.columnarRenderFun()
                }
                {
                    checkType === 'area' && this.areaRenderFun()
                }
                {
                    checkType === 'bread' &&<Pieslice data={breadData} isShowLabel={true} height={height} padding={padding}/>
                }
                {
                    checkType === 'radar' && this.radarRenderFun()
                }
                {
                    checkType === 'scatter' && this.scatterRenderFun()
                }
                {
                    checkType === 'bubblles' && this.bubbllesRenderFun()
                }
                {
                    checkType === 'coordinates' && this.coordinatesRenderFun()
                }
                {
                    checkType === 'relation' && this.relationRenderFun()
                }
                {
                    checkType === 'hot' && this.hotRenderFun()
                }
                {
                    checkType === 'funnel' && this.funnelRenderFun()
                }
                {
                    checkType === 'cloud' && this.cloudRenderFun()
                }
            </div>
            <div className={styles.close} onClick={()=>{this.closeWindow()}} >X</div>
        </div>
    );
  }
}

export default WindowChart;
